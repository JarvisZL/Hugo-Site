<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>数据挖掘导论 on 浙语临湖</title>
    <link>https://jarviszly.com/categories/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E5%AF%BC%E8%AE%BA/</link>
    <description>Recent content in 数据挖掘导论 on 浙语临湖</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Wed, 11 Mar 2020 14:06:27 +0800</lastBuildDate>
    
	<atom:link href="https://jarviszly.com/categories/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E5%AF%BC%E8%AE%BA/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>第三部分</title>
      <link>https://jarviszly.com/documents/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/%E7%AC%AC%E4%B8%89%E9%83%A8%E5%88%86/</link>
      <pubDate>Wed, 11 Mar 2020 14:06:27 +0800</pubDate>
      
      <guid>https://jarviszly.com/documents/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/%E7%AC%AC%E4%B8%89%E9%83%A8%E5%88%86/</guid>
      <description>Data Processing Data in the real world  不完全性：主要因为数据收集。 噪声：主要来自数据收集。  数据收集设备不准确 数据传输过程有干扰   不一致：主要来自数据集成  Major tasks of data preprocessing  数据清洗(Data cleaning)  修复丢失数据，消除噪声，解决不一致性等。   数据约简(Data reduction) 数据集成(Data integration)  将不同来源的数据集成   数据转换(Data transformation)  规范化和聚合(aggregation)    Data cleaning filling in missing values  丢弃有缺失的数据(Ignore the tuple) 人工填写缺失值(Fill in the missing value manually) 使用一个全局的常数(Use a global constant)  比如$&amp;quot;unknown&amp;quot;$   使用该属性的均值(Use the attribute mean) 使用同一类中该属性的均值(Use the attribute mean of the same class) 使用可能性最大的数值(Use the most probable value)  smoothing out noisy data  noise：在数据测量过程中随机错误或者误差。 装箱(Binning):  通过数据之间相邻关系来平滑一组排序好的数据   集群(Clustering)  将相似的数据放在同一集群中。   回归(Regression)  使用数学函数   数据审计(Data editing)  使用局部的平滑(local &amp;ldquo;smoothness&amp;rdquo;) 使用全局的一致(global consistency)    correcting inconsistent data  可以使用外部引用来修正一部分不一致数据 一些工具也可用于检测已知数据约束的违反情况  Data integration  模式集成(Schema integration)  元数据可以用来帮助模式集成   冗余处理(Handling redundancy)  在集成多个数据库时可能会出现冗余 一些冗余可以通过相关性分析来检测      Data transformation  规范化(Normalization)  使得属性的取值在一个规定的小范围内   平滑(Smoothing) 聚合(Aggregation) 泛化(Generalizaiton) 属性构造(Attribute construction)  Normalization  min-max normalization  $$v^\prime = \textcolor{green}{\dfrac{v - min_A}{max_A - min_A}}\textcolor{blue}{(new\_max_A - new\_min_A) }+ \textcolor{brown}{new\_min_A}$$  $\textcolor{green}{Part 1}$: 将原数据调整为单位1。 $\textcolor{blue}{Part 2}$: 得到新数据规范化后的长度。 $\textcolor{brown}{Part 3}$: 将新数据移到原来的位置。     z-score normalization  $$v^\prime = \dfrac{v - \bar{v}}{\sigma_v}$$   decimal scalint normalization  $$v^\prime = \dfrac{v}{10^j}$$ j is the smallest int such that $max(\vert v^\prime \vert) &amp;lt; 1$    Data reduction Feature selection/Atrribute Subset selection  去除不相关的属性，从Feature或者说Attribute中挑选一个子集，使得使用该子集的结果概率分布尽可能和原数据靠近。 贪心策略(1)：每次不断挑选最好的 贪心策略(2)：每次移除最差的 贪心策略(3)：每次不断挑选最好的并移除最差的 贪心策略(4)：使用决策树 遗传算法  信息增益(Information gain)  信息熵(information entropy)  信息熵是度量样本集合纯度最常用的一种指。 当前样本集合D中第k类样本所占的比例为$p_k(1,2,\cdots,n)$,则信息熵为 $$Ent(D) = -\sum_{i=1}^n p_k \log_2 p_k$$ $Ent(D)$的值越小，D的纯度越高。   信息增益  假定离散属性a有V个可能的取值$a_1,\cdots,a_v$，如果使用a来对样本集合D进行划分，则产生V个分支节点，其中第v个包含了D中所有在属性a上取值为$a_v$的数据记为$D_v$,则可以针对$D_v$计算出信息熵，同时赋予其权重$\dfrac{\vert D_v \vert}{\vert D\vert}$ 用属性a对样本集D进行划分所得到的信息增益为 $$Gain(D,a) = Ent(D) - \sum_{i=1}^V \dfrac{\vert D_v \vert}{\vert D\vert} Ent(D_v)$$ 一般而言，信息增益越大，则意味着使用属性a进行划分所得到的纯度提升越大。所以我们可以选择属性 $$a^* = \mathop{argmax}\limits_{a} Gain(D,a)$$    </description>
    </item>
    
    <item>
      <title>第二部分</title>
      <link>https://jarviszly.com/documents/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86/</link>
      <pubDate>Wed, 26 Feb 2020 19:36:58 +0800</pubDate>
      
      <guid>https://jarviszly.com/documents/%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98/%E7%AC%AC%E4%BA%8C%E9%83%A8%E5%88%86/</guid>
      <description>&lt;h1 id=&#34;data-cube-and-olap&#34;&gt;Data Cube And OLAP&lt;/h1&gt;</description>
    </item>
    
  </channel>
</rss>