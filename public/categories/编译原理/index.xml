<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>编译原理 on 浙语临湖</title>
    <link>https://jarviszly.com/categories/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/</link>
    <description>Recent content in 编译原理 on 浙语临湖</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Thu, 19 Mar 2020 10:23:12 +0800</lastBuildDate>
    
	<atom:link href="https://jarviszly.com/categories/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>语法制导的翻译</title>
      <link>https://jarviszly.com/documents/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E8%AF%AD%E6%B3%95%E5%88%B6%E5%AF%BC%E7%9A%84%E7%BF%BB%E8%AF%91/</link>
      <pubDate>Thu, 19 Mar 2020 10:23:12 +0800</pubDate>
      
      <guid>https://jarviszly.com/documents/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E8%AF%AD%E6%B3%95%E5%88%B6%E5%AF%BC%E7%9A%84%E7%BF%BB%E8%AF%91/</guid>
      <description></description>
    </item>
    
    <item>
      <title>语法分析</title>
      <link>https://jarviszly.com/documents/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90/</link>
      <pubDate>Thu, 27 Feb 2020 10:06:04 +0800</pubDate>
      
      <guid>https://jarviszly.com/documents/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90/</guid>
      <description>语法分析 语法分析器  基本作用  从词法分析器获得词法单元序列，确认该序列是否可以由语言的文法生成 对于语法错误的程序，报告错误信息 对于语法正确的程序，生成语法分析树(语法树) 语法分析器    分类  自顶向下语法分析器(用于处理LL文法)  从语法分析树的根部开始构造语法分析树   自底向上语法分析器(用于处理LR文法)  从语法分析树的叶子开始构造语法分析树   两个第一个L都表示从左到右，逐个扫描词法单元    上下文无关文法(CFG) 组成部分  终结符号：组成串的基本符号(词法单元名字) 非终结符号：表示串的集合的语法变量  在程序设计语言中通常对应于某个程序构造如$\textit{stmt}$   开始符号：某个被指定的非终结符号  对应的串的集合就是文法的语言   产生式：描述将终结符号和非终结符号组成串的方法  形式：头(左)部$\rightarrow$ 体(右)部 头部是一个非终结符号，右边是一个符号串 例如:$\textit{expression} \rightarrow \textit{expression} + \textit{term}$(加法表达式)    例子  简单算术表达式文法  终结符号: $id,+,-,*,/,(,)$ 非终结符号：$\textit{expression}, \textit{term}, \textit{factor}$ 开始符号：$\textit{expression}$ 产生式集合  $\textit{expression} \rightarrow \textit{expression} + \textit{term}$ $\textit{expression} \rightarrow \textit{expression} - \textit{term}$ $\textit{expression} \rightarrow \textit{term}$ $\textit{term} \rightarrow \textit{term} * \textit{factor}$ $\textit{term} \rightarrow \textit{term} / \textit{factor}$ $\textit{term} \rightarrow \textit{factor}$ $\textit{factor} \rightarrow (\textit{expression})$ $\textit{factor} \rightarrow id$   简单表示方法  $E\rightarrow E + T | E - T | T$ $T\rightarrow T*F | T / F | F$ $F\rightarrow (E) | id$ 上面的$|$是元符号      推导  将待处理的串的某个非终结符号替换为这个非终结符号的某个产生式的体(用右边替换左边) 从开始符号出发，不断替换，最终可以得到不同的 句型 正式定义   如果$A\rightarrow \gamma$是一个产生式，那么$\alpha A \beta \Longrightarrow \alpha \gamma \beta$</description>
    </item>
    
  </channel>
</rss>