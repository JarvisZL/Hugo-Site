<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>algorithm on 浙语临湖</title>
    <link>https://jarviszly.com/tags/algorithm/</link>
    <description>Recent content in algorithm on 浙语临湖</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sat, 27 Jun 2020 17:06:38 +0800</lastBuildDate>
    
	<atom:link href="https://jarviszly.com/tags/algorithm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>AlgorithmInproblemsolving</title>
      <link>https://jarviszly.com/blogs/algorithminproblemsolving/</link>
      <pubDate>Sat, 27 Jun 2020 17:06:38 +0800</pubDate>
      
      <guid>https://jarviszly.com/blogs/algorithminproblemsolving/</guid>
      <description>排序算法 快速排序  Quicksort is a divide-and-conquer algorithm. It works by selecting a &amp;lsquo;pivot&amp;rsquo; element from the array and partitioning the other elements into two sub-arrays, according to whether they are less than or greater than the pivot. The sub-arrays are then sorted recursively.  &amp; nums, int l, int r){ int val = nums[r]; int i = l-1; for(int j = l; j &amp; nums, int l, int r){ if(l sortArray(vector&amp; nums) { quicksort(nums,0,nums.</description>
    </item>
    
  </channel>
</rss>